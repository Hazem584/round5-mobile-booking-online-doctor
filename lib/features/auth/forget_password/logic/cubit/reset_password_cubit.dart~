import 'package:flutter_bloc/flutter_bloc.dart';
import '../../data/repository/reset_password_repository.dart';
import 'reset_password_state.dart';

class ResetPasswordCubit extends Cubit<ResetPasswordState> {
  final ResetPasswordRepository _repo;
  ResetPasswordCubit(this._repo) : super(const ResetPasswordInitial());

  Future<void> resetPassword({
    required String email,
    required String otp,
    required String newPassword,
  }) async {
    if (newPassword.length < 8) {
      emit(const ResetPasswordFailure('كلمة السر 8 أحرف على الأقل'));
      return;
    }
    emit(const ResetPasswordLoading());
    try {
      final r = await _repo.resetPassword(
        email: email,
        otp: otp,
        password: newPassword,
      );
      if (r.success) {
        emit(ResetPasswordSuccess(r.message ?? 'تم تغيير كلمة السر بنجاح'));
      } else {
        emit(ResetPasswordFailure(r.message ?? 'فشل تغيير كلمة السر'));
      }
    } catch (e) {
      emit(ResetPasswordFailure(e.toString()));
    }
  }
}
